{
  "swagger": "2.0",
  "info": {
    "title": "cpc.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cpc/getBalance": {
      "post": {
        "summary": "GetBalance returns the amount of wei for the given address in the state of the\ngiven block number. The rpc.LatestBlockNumber and rpc.PendingBlockNumber meta\nblock numbers are also allowed.",
        "operationId": "GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosBalance"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosChainReaderRequest"
            }
          }
        ],
        "tags": [
          "ChainReaderAPI"
        ]
      }
    },
    "/api/v1/cpc/getBlockByHash": {
      "post": {
        "summary": "GetBlockByHash returns the requested block. When fullTx is true all transactions in the block are returned in full\ndetail, otherwise only the transaction hash is returned.",
        "operationId": "GetBlockByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosBlock"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosChainReaderRequest"
            }
          }
        ],
        "tags": [
          "ChainReaderAPI"
        ]
      }
    },
    "/api/v1/cpc/getBlockByNumber": {
      "post": {
        "summary": "GetBlockByNumber returns the requested block. When blockNr is -1 the chain head is returned. When fullTx is true all\ntransactions in the block are returned in full detail, otherwise only the transaction hash is returned.",
        "operationId": "GetBlockByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosBlock"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosBlockNumber"
            }
          }
        ],
        "tags": [
          "ChainReaderAPI"
        ]
      }
    },
    "/api/v1/cpc/getBlockCount": {
      "post": {
        "summary": "GetBlockCount returns the block number of the chain head.",
        "operationId": "GetBlockCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosBlockNumber"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "ChainReaderAPI"
        ]
      }
    },
    "/api/v1/cpc/getRawTransactionByBlockNumberAndIndex": {
      "post": {
        "operationId": "GetRawTransactionByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransaction"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionPoolReaderRequest"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionByBlockHashAndIndex": {
      "post": {
        "summary": "GetBlockByHash returns the requested block. When fullTx is true all transactions in the block are returned in full\ndetail, otherwise only the transaction hash is returned.",
        "operationId": "GetTransactionByBlockHashAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransaction"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionPoolReaderRequest"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionByBlockNumberAndIndex": {
      "post": {
        "summary": "GetBlockByNumber returns the requested block. When blockNr is -1 the chain head is returned. When fullTx is true all\ntransactions in the block are returned in full detail, otherwise only the transaction hash is returned.",
        "operationId": "GetTransactionByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransaction"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionPoolReaderRequest"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionByHash": {
      "post": {
        "operationId": "GetTransactionByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransaction"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionHash"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionCount": {
      "post": {
        "operationId": "GetTransactionCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransactionCount"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionPoolReaderRequest"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionCountByBlockHash": {
      "post": {
        "summary": "GetBalance returns the amount of wei for the given address in the state of the\ngiven block number. The rpc.LatestBlockNumber and rpc.PendingBlockNumber meta\nblock numbers are also allowed.",
        "operationId": "GetTransactionCountByBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransactionCount"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosBlockNumber"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionCountByBlockNumber": {
      "post": {
        "summary": "GetBlockCount returns the block number of the chain head.",
        "operationId": "GetTransactionCountByBlockNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransactionCount"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosBlockNumber"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    },
    "/api/v1/cpc/getTransactionReceipt": {
      "post": {
        "operationId": "GetTransactionReceipt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosTransaction"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosTransactionHash"
            }
          }
        ],
        "tags": [
          "TransactionPoolReader"
        ]
      }
    }
  },
  "definitions": {
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    },
    "protosBalance": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string"
        }
      }
    },
    "protosBlock": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "uint64"
        },
        "hash": {
          "type": "string"
        },
        "parent_hash": {
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "mix_hash": {
          "type": "string"
        },
        "logs_bloom": {
          "type": "string",
          "format": "byte"
        },
        "state_root": {
          "type": "string"
        },
        "miner": {
          "type": "string"
        },
        "difficulty": {
          "type": "string",
          "format": "uint64"
        },
        "extra_data": {
          "type": "string",
          "format": "byte"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "gas_limit": {
          "type": "string",
          "format": "uint64"
        },
        "gas_used": {
          "type": "string",
          "format": "uint64"
        },
        "timestamp": {
          "type": "string"
        },
        "transactions_root": {
          "type": "string"
        },
        "receipts_root": {
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protosTransaction"
          }
        }
      }
    },
    "protosBlockNumber": {
      "type": "object",
      "properties": {
        "block_number": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "protosChainReaderRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "block_hash": {
          "type": "string"
        },
        "block_number": {
          "type": "string",
          "format": "int64"
        },
        "is_full": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "protosTransaction": {
      "type": "object",
      "properties": {
        "tx_hash": {
          "type": "string"
        },
        "block_hash": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "v": {
          "type": "string"
        },
        "r": {
          "type": "string"
        },
        "s": {
          "type": "string"
        },
        "transaction_index": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "gas": {
          "type": "string",
          "format": "uint64"
        },
        "gas_price": {
          "type": "string",
          "format": "uint64"
        },
        "input": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protosTransactionCount": {
      "type": "object",
      "properties": {
        "transaction_count": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "protosTransactionHash": {
      "type": "object",
      "properties": {
        "transaction_hash": {
          "type": "string"
        }
      }
    },
    "protosTransactionPoolReaderRequest": {
      "type": "object",
      "properties": {
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "block_hash": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    }
  }
}
