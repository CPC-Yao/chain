{
  "swagger": "2.0",
  "info": {
    "title": "eth.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/v1/eth/accounts": {
      "post": {
        "operationId": "Accounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicAccountAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicAccountAPI"
        ]
      }
    },
    "/apis/v1/eth/gasPrice": {
      "post": {
        "operationId": "GasPrice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicInnerEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicInnerEthereumAPI"
        ]
      }
    },
    "/apis/v1/eth/getWork": {
      "post": {
        "operationId": "GetWork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicMinerAPI"
        ]
      }
    },
    "/apis/v1/eth/mining": {
      "post": {
        "operationId": "Mining",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicMinerAPI"
        ]
      }
    },
    "/apis/v1/eth/protocolVersion": {
      "post": {
        "operationId": "ProtocolVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicInnerEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicInnerEthereumAPI"
        ]
      }
    },
    "/apis/v1/eth/submitHashrate": {
      "post": {
        "operationId": "SubmitHashrate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicMinerAPI"
        ]
      }
    },
    "/apis/v1/eth/submitWork": {
      "post": {
        "operationId": "SubmitWork",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicMinerAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicMinerAPI"
        ]
      }
    },
    "/apis/v1/eth/syncing": {
      "post": {
        "operationId": "Syncing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicInnerEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicInnerEthereumAPI"
        ]
      }
    },
    "/apis/v1/personal/blockNumber": {
      "post": {
        "operationId": "BlockNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/call": {
      "post": {
        "operationId": "Call",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/coinbase": {
      "post": {
        "operationId": "Coinbase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicEthereumAPI"
        ]
      }
    },
    "/apis/v1/personal/estimateGas": {
      "post": {
        "operationId": "EstimateGas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/etherbase": {
      "post": {
        "operationId": "Etherbase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicEthereumAPI"
        ]
      }
    },
    "/apis/v1/personal/getBalance": {
      "post": {
        "operationId": "GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getBlockByHash": {
      "post": {
        "operationId": "GetBlockByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getBlockByNumber": {
      "post": {
        "operationId": "GetBlockByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getBlockTransactionCountByHash": {
      "post": {
        "operationId": "GetBlockTransactionCountByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getBlockTransactionCountByNumber": {
      "post": {
        "operationId": "GetBlockTransactionCountByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getCode": {
      "post": {
        "operationId": "GetCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getRawTransactionByBlockHashAndIndex": {
      "post": {
        "operationId": "GetRawTransactionByBlockHashAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getRawTransactionByBlockNumberAndIndex": {
      "post": {
        "operationId": "GetRawTransactionByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getRawTransactionByHash": {
      "post": {
        "operationId": "GetRawTransactionByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getStorageAt": {
      "post": {
        "operationId": "GetStorageAt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getTransactionByBlockHashAndIndex": {
      "post": {
        "operationId": "GetTransactionByBlockHashAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getTransactionByBlockNumberAndIndex": {
      "post": {
        "operationId": "GetTransactionByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getTransactionByHash": {
      "post": {
        "operationId": "GetTransactionByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getTransactionCount": {
      "post": {
        "operationId": "GetTransactionCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getTransactionReceipt": {
      "post": {
        "operationId": "GetTransactionReceipt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/getUncleByBlockHashAndIndex": {
      "post": {
        "operationId": "GetUncleByBlockHashAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getUncleByBlockNumberAndIndex": {
      "post": {
        "operationId": "GetUncleByBlockNumberAndIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getUncleCountByBlockHash": {
      "post": {
        "operationId": "GetUncleCountByBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/getUncleCountByBlockNumber": {
      "post": {
        "operationId": "GetUncleCountByBlockNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicBlockChainAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicBlockChainAPI"
        ]
      }
    },
    "/apis/v1/personal/hashrate": {
      "post": {
        "operationId": "Hashrate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicEthereumAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicEthereumAPI"
        ]
      }
    },
    "/apis/v1/personal/pendingTransactions": {
      "post": {
        "operationId": "PendingTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/resend": {
      "post": {
        "operationId": "Resend",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/sendRawTransaction": {
      "post": {
        "operationId": "SendRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/sendTransaction": {
      "post": {
        "operationId": "SendTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/sign": {
      "post": {
        "operationId": "Sign",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    },
    "/apis/v1/personal/signTransaction": {
      "post": {
        "operationId": "SignTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ethpbPublicTransactionPoolAPIRequest"
            }
          }
        ],
        "tags": [
          "PublicTransactionPoolAPI"
        ]
      }
    }
  },
  "definitions": {
    "ethpbPublicAccountAPIReply": {
      "type": "object",
      "properties": {
        "accounts": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "ethpbPublicBlockChainAPIReply": {
      "type": "object",
      "properties": {
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "estimate_gas": {
          "type": "string",
          "format": "uint64"
        },
        "balance": {
          "type": "string",
          "format": "byte"
        },
        "block_info": {
          "$ref": "#/definitions/protobufAny"
        },
        "code": {
          "type": "string",
          "format": "byte"
        },
        "storage": {
          "type": "string",
          "format": "byte"
        },
        "uncle_count": {
          "type": "string",
          "format": "uint64"
        },
        "result": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ethpbPublicBlockChainAPIRequest": {
      "type": "object",
      "properties": {
        "args": {
          "$ref": "#/definitions/protobufAny",
          "title": "CallArgs args = 1;"
        },
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "address": {
          "type": "string",
          "format": "byte"
        },
        "full_tx": {
          "type": "boolean",
          "format": "boolean"
        },
        "key": {
          "type": "string"
        },
        "block_hash": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ethpbPublicEthereumAPIReply": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "rate": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ethpbPublicInnerEthereumAPIReply": {
      "type": "object",
      "properties": {
        "gas_price": {
          "type": "string",
          "format": "byte",
          "title": "gas limit for trasaction"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "is_ok": {
          "type": "boolean",
          "format": "boolean"
        },
        "sync_info": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "ethpbPublicMinerAPIReply": {
      "type": "object",
      "properties": {
        "mining": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_accepting": {
          "type": "boolean",
          "format": "boolean"
        },
        "works": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ethpbPublicMinerAPIRequest": {
      "type": "object",
      "properties": {
        "block_nonce": {
          "type": "string",
          "format": "byte"
        },
        "solution": {
          "type": "string",
          "format": "byte"
        },
        "digest": {
          "type": "string",
          "format": "byte"
        },
        "hashrate": {
          "type": "string",
          "format": "uint64"
        },
        "id": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ethpbPublicTransactionPoolAPIReply": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "rpc_transaction": {
          "$ref": "#/definitions/protobufAny"
        },
        "tx_receipt": {
          "type": "string",
          "format": "byte",
          "title": "RPCTransaction rpc_transaction = 3;"
        },
        "tx_hash": {
          "type": "string",
          "format": "byte"
        },
        "sign_tx_result": {
          "$ref": "#/definitions/protobufAny"
        },
        "tx_bytes": {
          "type": "string",
          "format": "byte"
        },
        "fields": {
          "$ref": "#/definitions/protobufAny"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        },
        "pending_txs": {
          "$ref": "#/definitions/protobufAny",
          "title": "repeated RPCTransaction pending_txs = 10;"
        }
      }
    },
    "ethpbPublicTransactionPoolAPIRequest": {
      "type": "object",
      "properties": {
        "block_hash": {
          "type": "string",
          "format": "byte"
        },
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "tx_hash": {
          "type": "string",
          "format": "byte"
        },
        "address": {
          "type": "string",
          "format": "byte"
        },
        "send_tx_args": {
          "$ref": "#/definitions/protobufAny"
        },
        "gas_price": {
          "type": "string",
          "format": "byte"
        },
        "gas_limit": {
          "type": "string",
          "format": "uint64"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "encoded_tx": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
