{
  "swagger": "2.0",
  "info": {
    "title": "v1/miner/miner.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/miner/setCoinbase": {
      "post": {
        "summary": "SetCoinbase sets the coinbase of the miner",
        "operationId": "SetCoinbase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonIsOk"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonAddress"
            }
          }
        ],
        "tags": [
          "MinerManager"
        ]
      }
    },
    "/api/v1/miner/setExtra": {
      "post": {
        "summary": "SetExtra sets the extra data string that is included when this miner mines a block.",
        "operationId": "SetExtra",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonIsOk"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/minerExtra"
            }
          }
        ],
        "tags": [
          "MinerManager"
        ]
      }
    },
    "/api/v1/miner/setGasPrice": {
      "post": {
        "summary": "SetGasPrice sets the minimum accepted gas price for the miner.",
        "operationId": "SetGasPrice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonIsOk"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonGasPrice"
            }
          }
        ],
        "tags": [
          "MinerManager"
        ]
      }
    },
    "/api/v1/miner/start": {
      "post": {
        "summary": "Start the miner with the given number of threads. If threads is nil the number\nof workers started is equal to the number of logical CPUs that are usable by\nthis process. If mining is already running, this method adjust the number of\nthreads allowed to use.",
        "operationId": "Start",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/minerThreads"
            }
          }
        ],
        "tags": [
          "MinerManager"
        ]
      }
    },
    "/api/v1/miner/stop": {
      "post": {
        "summary": "Stop the miner",
        "operationId": "Stop",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonIsOk"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "MinerManager"
        ]
      }
    }
  },
  "definitions": {
    "commonAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "commonGasPrice": {
      "type": "object",
      "properties": {
        "gasPrice": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "commonIsOk": {
      "type": "object",
      "properties": {
        "isOk": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "IsOk return status"
    },
    "minerExtra": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "string"
        }
      },
      "description": "ExTra the extra data string that is included when this miner mines a block."
    },
    "minerThreads": {
      "type": "object",
      "properties": {
        "threads": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Threads represents the number of threads opened."
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
