// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/txpool/txpool.proto

package txpool

import (
	common "bitbucket.org/cpchain/chain/api/v1/common"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusInfo struct {
	Status               map[string]uint64 `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StatusInfo) Reset()         { *m = StatusInfo{} }
func (m *StatusInfo) String() string { return proto.CompactTextString(m) }
func (*StatusInfo) ProtoMessage()    {}
func (*StatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{0}
}

func (m *StatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusInfo.Unmarshal(m, b)
}
func (m *StatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusInfo.Marshal(b, m, deterministic)
}
func (m *StatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusInfo.Merge(m, src)
}
func (m *StatusInfo) XXX_Size() int {
	return xxx_messageInfo_StatusInfo.Size(m)
}
func (m *StatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StatusInfo proto.InternalMessageInfo

func (m *StatusInfo) GetStatus() map[string]uint64 {
	if m != nil {
		return m.Status
	}
	return nil
}

type Dump struct {
	Dump                 map[string]*common.RpcTransaction `protobuf:"bytes,1,rep,name=dump,proto3" json:"dump,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Dump) Reset()         { *m = Dump{} }
func (m *Dump) String() string { return proto.CompactTextString(m) }
func (*Dump) ProtoMessage()    {}
func (*Dump) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{1}
}

func (m *Dump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dump.Unmarshal(m, b)
}
func (m *Dump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dump.Marshal(b, m, deterministic)
}
func (m *Dump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dump.Merge(m, src)
}
func (m *Dump) XXX_Size() int {
	return xxx_messageInfo_Dump.Size(m)
}
func (m *Dump) XXX_DiscardUnknown() {
	xxx_messageInfo_Dump.DiscardUnknown(m)
}

var xxx_messageInfo_Dump proto.InternalMessageInfo

func (m *Dump) GetDump() map[string]*common.RpcTransaction {
	if m != nil {
		return m.Dump
	}
	return nil
}

// NonceTxPool nonce -> Txs
type NonceTx struct {
	NonceTx              map[string]*common.RpcTransaction `protobuf:"bytes,1,rep,name=nonceTx,proto3" json:"nonceTx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *NonceTx) Reset()         { *m = NonceTx{} }
func (m *NonceTx) String() string { return proto.CompactTextString(m) }
func (*NonceTx) ProtoMessage()    {}
func (*NonceTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{2}
}

func (m *NonceTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceTx.Unmarshal(m, b)
}
func (m *NonceTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceTx.Marshal(b, m, deterministic)
}
func (m *NonceTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceTx.Merge(m, src)
}
func (m *NonceTx) XXX_Size() int {
	return xxx_messageInfo_NonceTx.Size(m)
}
func (m *NonceTx) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceTx.DiscardUnknown(m)
}

var xxx_messageInfo_NonceTx proto.InternalMessageInfo

func (m *NonceTx) GetNonceTx() map[string]*common.RpcTransaction {
	if m != nil {
		return m.NonceTx
	}
	return nil
}

// account -> NonceTxPool
type AccountNonceTxPool struct {
	AccountNonceTxPool   map[string]*NonceTx `protobuf:"bytes,1,rep,name=accountNonceTxPool,proto3" json:"accountNonceTxPool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AccountNonceTxPool) Reset()         { *m = AccountNonceTxPool{} }
func (m *AccountNonceTxPool) String() string { return proto.CompactTextString(m) }
func (*AccountNonceTxPool) ProtoMessage()    {}
func (*AccountNonceTxPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{3}
}

func (m *AccountNonceTxPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountNonceTxPool.Unmarshal(m, b)
}
func (m *AccountNonceTxPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountNonceTxPool.Marshal(b, m, deterministic)
}
func (m *AccountNonceTxPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountNonceTxPool.Merge(m, src)
}
func (m *AccountNonceTxPool) XXX_Size() int {
	return xxx_messageInfo_AccountNonceTxPool.Size(m)
}
func (m *AccountNonceTxPool) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountNonceTxPool.DiscardUnknown(m)
}

var xxx_messageInfo_AccountNonceTxPool proto.InternalMessageInfo

func (m *AccountNonceTxPool) GetAccountNonceTxPool() map[string]*NonceTx {
	if m != nil {
		return m.AccountNonceTxPool
	}
	return nil
}

type TxPool struct {
	//    map<string,Accounts> txPool = 1;
	PendingTxPool        *AccountNonceTxPool `protobuf:"bytes,1,opt,name=pendingTxPool,proto3" json:"pendingTxPool,omitempty"`
	QueuedTxPool         *AccountNonceTxPool `protobuf:"bytes,2,opt,name=queuedTxPool,proto3" json:"queuedTxPool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TxPool) Reset()         { *m = TxPool{} }
func (m *TxPool) String() string { return proto.CompactTextString(m) }
func (*TxPool) ProtoMessage()    {}
func (*TxPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{4}
}

func (m *TxPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxPool.Unmarshal(m, b)
}
func (m *TxPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxPool.Marshal(b, m, deterministic)
}
func (m *TxPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxPool.Merge(m, src)
}
func (m *TxPool) XXX_Size() int {
	return xxx_messageInfo_TxPool.Size(m)
}
func (m *TxPool) XXX_DiscardUnknown() {
	xxx_messageInfo_TxPool.DiscardUnknown(m)
}

var xxx_messageInfo_TxPool proto.InternalMessageInfo

func (m *TxPool) GetPendingTxPool() *AccountNonceTxPool {
	if m != nil {
		return m.PendingTxPool
	}
	return nil
}

func (m *TxPool) GetQueuedTxPool() *AccountNonceTxPool {
	if m != nil {
		return m.QueuedTxPool
	}
	return nil
}

type NonceTxString struct {
	TxString             map[string]string `protobuf:"bytes,1,rep,name=txString,proto3" json:"txString,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NonceTxString) Reset()         { *m = NonceTxString{} }
func (m *NonceTxString) String() string { return proto.CompactTextString(m) }
func (*NonceTxString) ProtoMessage()    {}
func (*NonceTxString) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{5}
}

func (m *NonceTxString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceTxString.Unmarshal(m, b)
}
func (m *NonceTxString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceTxString.Marshal(b, m, deterministic)
}
func (m *NonceTxString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceTxString.Merge(m, src)
}
func (m *NonceTxString) XXX_Size() int {
	return xxx_messageInfo_NonceTxString.Size(m)
}
func (m *NonceTxString) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceTxString.DiscardUnknown(m)
}

var xxx_messageInfo_NonceTxString proto.InternalMessageInfo

func (m *NonceTxString) GetTxString() map[string]string {
	if m != nil {
		return m.TxString
	}
	return nil
}

type AccountNonceTxStringPool struct {
	AccountNonceTxStringPool map[string]*NonceTxString `protobuf:"bytes,1,rep,name=accountNonceTxStringPool,proto3" json:"accountNonceTxStringPool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *AccountNonceTxStringPool) Reset()         { *m = AccountNonceTxStringPool{} }
func (m *AccountNonceTxStringPool) String() string { return proto.CompactTextString(m) }
func (*AccountNonceTxStringPool) ProtoMessage()    {}
func (*AccountNonceTxStringPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{6}
}

func (m *AccountNonceTxStringPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountNonceTxStringPool.Unmarshal(m, b)
}
func (m *AccountNonceTxStringPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountNonceTxStringPool.Marshal(b, m, deterministic)
}
func (m *AccountNonceTxStringPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountNonceTxStringPool.Merge(m, src)
}
func (m *AccountNonceTxStringPool) XXX_Size() int {
	return xxx_messageInfo_AccountNonceTxStringPool.Size(m)
}
func (m *AccountNonceTxStringPool) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountNonceTxStringPool.DiscardUnknown(m)
}

var xxx_messageInfo_AccountNonceTxStringPool proto.InternalMessageInfo

func (m *AccountNonceTxStringPool) GetAccountNonceTxStringPool() map[string]*NonceTxString {
	if m != nil {
		return m.AccountNonceTxStringPool
	}
	return nil
}

type TxStringPool struct {
	PendingTxStringPool  *AccountNonceTxStringPool `protobuf:"bytes,1,opt,name=pendingTxStringPool,proto3" json:"pendingTxStringPool,omitempty"`
	QueuedTxStringPool   *AccountNonceTxStringPool `protobuf:"bytes,2,opt,name=queuedTxStringPool,proto3" json:"queuedTxStringPool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TxStringPool) Reset()         { *m = TxStringPool{} }
func (m *TxStringPool) String() string { return proto.CompactTextString(m) }
func (*TxStringPool) ProtoMessage()    {}
func (*TxStringPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fff8348ec1dc78f, []int{7}
}

func (m *TxStringPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxStringPool.Unmarshal(m, b)
}
func (m *TxStringPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxStringPool.Marshal(b, m, deterministic)
}
func (m *TxStringPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxStringPool.Merge(m, src)
}
func (m *TxStringPool) XXX_Size() int {
	return xxx_messageInfo_TxStringPool.Size(m)
}
func (m *TxStringPool) XXX_DiscardUnknown() {
	xxx_messageInfo_TxStringPool.DiscardUnknown(m)
}

var xxx_messageInfo_TxStringPool proto.InternalMessageInfo

func (m *TxStringPool) GetPendingTxStringPool() *AccountNonceTxStringPool {
	if m != nil {
		return m.PendingTxStringPool
	}
	return nil
}

func (m *TxStringPool) GetQueuedTxStringPool() *AccountNonceTxStringPool {
	if m != nil {
		return m.QueuedTxStringPool
	}
	return nil
}

func init() {
	proto.RegisterType((*StatusInfo)(nil), "txpool.StatusInfo")
	proto.RegisterMapType((map[string]uint64)(nil), "txpool.StatusInfo.StatusEntry")
	proto.RegisterType((*Dump)(nil), "txpool.Dump")
	proto.RegisterMapType((map[string]*common.RpcTransaction)(nil), "txpool.Dump.DumpEntry")
	proto.RegisterType((*NonceTx)(nil), "txpool.NonceTx")
	proto.RegisterMapType((map[string]*common.RpcTransaction)(nil), "txpool.NonceTx.NonceTxEntry")
	proto.RegisterType((*AccountNonceTxPool)(nil), "txpool.AccountNonceTxPool")
	proto.RegisterMapType((map[string]*NonceTx)(nil), "txpool.AccountNonceTxPool.AccountNonceTxPoolEntry")
	proto.RegisterType((*TxPool)(nil), "txpool.TxPool")
	proto.RegisterType((*NonceTxString)(nil), "txpool.NonceTxString")
	proto.RegisterMapType((map[string]string)(nil), "txpool.NonceTxString.TxStringEntry")
	proto.RegisterType((*AccountNonceTxStringPool)(nil), "txpool.AccountNonceTxStringPool")
	proto.RegisterMapType((map[string]*NonceTxString)(nil), "txpool.AccountNonceTxStringPool.AccountNonceTxStringPoolEntry")
	proto.RegisterType((*TxStringPool)(nil), "txpool.TxStringPool")
}

func init() { proto.RegisterFile("v1/txpool/txpool.proto", fileDescriptor_4fff8348ec1dc78f) }

var fileDescriptor_4fff8348ec1dc78f = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xd6, 0xba, 0xf9, 0x25, 0xcd, 0x34, 0xf9, 0x81, 0xb6, 0x4d, 0x88, 0xb6, 0x05, 0x05, 0x23,
	0xa4, 0x28, 0x20, 0x47, 0x04, 0xa9, 0x82, 0x20, 0x95, 0xbf, 0x3d, 0xf4, 0x02, 0x95, 0x1b, 0xf5,
	0xd0, 0x9b, 0xe3, 0x6c, 0xa3, 0x88, 0x64, 0xd7, 0x24, 0xeb, 0xaa, 0xe1, 0x82, 0x04, 0x37, 0x24,
	0x4e, 0x88, 0x07, 0xe0, 0x1d, 0x78, 0x10, 0x24, 0x5e, 0x81, 0xa7, 0xe0, 0x84, 0xec, 0x1d, 0x27,
	0x76, 0x62, 0x13, 0x0e, 0x5c, 0xe2, 0xdd, 0xfd, 0x66, 0xbe, 0xf9, 0xbe, 0xc9, 0x7a, 0x0c, 0xd5,
	0x8b, 0x7b, 0x2d, 0x75, 0xe9, 0x49, 0x39, 0xc2, 0x87, 0xe5, 0x4d, 0xa4, 0x92, 0x34, 0xaf, 0x77,
	0x6c, 0xdb, 0x95, 0xe3, 0xb1, 0x14, 0x2d, 0xfd, 0xd0, 0x20, 0xdb, 0x1d, 0x48, 0x39, 0x18, 0xf1,
	0x56, 0xb8, 0xeb, 0xf9, 0xe7, 0x2d, 0x3e, 0xf6, 0xd4, 0x0c, 0xc1, 0x3d, 0x04, 0x1d, 0x6f, 0xd8,
	0x72, 0x84, 0x90, 0xca, 0x51, 0x43, 0x29, 0xa6, 0x1a, 0x35, 0xdf, 0x01, 0x9c, 0x28, 0x47, 0xf9,
	0xd3, 0x23, 0x71, 0x2e, 0xe9, 0x3e, 0xe4, 0xa7, 0xe1, 0xae, 0x46, 0xea, 0x1b, 0x8d, 0xad, 0xf6,
	0x0d, 0x0b, 0x45, 0x2c, 0x62, 0x70, 0x79, 0x28, 0xd4, 0x64, 0x66, 0x63, 0x34, 0x7b, 0x08, 0x5b,
	0xb1, 0x63, 0x7a, 0x15, 0x36, 0x5e, 0xf3, 0x59, 0x8d, 0xd4, 0x49, 0xa3, 0x68, 0x07, 0x4b, 0xba,
	0x03, 0xff, 0x5d, 0x38, 0x23, 0x9f, 0xd7, 0x8c, 0x3a, 0x69, 0xe4, 0x6c, 0xbd, 0xe9, 0x18, 0x0f,
	0x88, 0xf9, 0x81, 0x40, 0xee, 0x85, 0x3f, 0xf6, 0x68, 0x13, 0x72, 0x7d, 0x7f, 0xec, 0x61, 0xe5,
	0x6a, 0x54, 0x39, 0xc0, 0xc2, 0x1f, 0x5d, 0x31, 0x8c, 0x61, 0xaf, 0xa0, 0x38, 0x3f, 0x4a, 0xa9,
	0x76, 0x37, 0x5e, 0x2d, 0xe0, 0xc2, 0x6e, 0xd9, 0x9e, 0xdb, 0x9d, 0x38, 0x62, 0xea, 0xb8, 0x41,
	0x0b, 0xe2, 0x2a, 0xbe, 0x10, 0x28, 0xbc, 0x94, 0xc2, 0xe5, 0xdd, 0x4b, 0xba, 0x0f, 0x05, 0xa1,
	0x97, 0xa8, 0x65, 0x2f, 0xd2, 0x82, 0x11, 0xd1, 0x53, 0x2b, 0x8a, 0x82, 0x99, 0x0d, 0xa5, 0x38,
	0xf0, 0x4f, 0x74, 0x7d, 0x27, 0x40, 0x9f, 0xba, 0xae, 0xf4, 0x85, 0x42, 0xee, 0x63, 0x29, 0x47,
	0xb4, 0x07, 0xd4, 0x59, 0x39, 0x45, 0xb5, 0xed, 0x48, 0xed, 0x6a, 0x5e, 0xca, 0x91, 0xf6, 0x90,
	0xc2, 0xc6, 0x4e, 0xe1, 0x5a, 0x46, 0x78, 0x8a, 0xb3, 0xdb, 0x49, 0x67, 0x57, 0x96, 0x3a, 0x16,
	0xb7, 0xf4, 0x91, 0x40, 0x1e, 0x6d, 0x3c, 0x81, 0xb2, 0xc7, 0x45, 0x7f, 0x28, 0x06, 0x73, 0x07,
	0x41, 0x36, 0xcb, 0x76, 0x60, 0x27, 0x13, 0xe8, 0x01, 0x94, 0xde, 0xf8, 0xdc, 0xe7, 0x7d, 0x24,
	0x30, 0xd6, 0x12, 0x24, 0xe2, 0xcd, 0x4f, 0x04, 0xca, 0x88, 0x9e, 0xa8, 0xc9, 0x50, 0x0c, 0xe8,
	0x63, 0xd8, 0x54, 0xb8, 0xc6, 0x86, 0xde, 0x5a, 0x32, 0xa3, 0x41, 0x2b, 0x5a, 0xe8, 0x0e, 0xce,
	0x93, 0xd8, 0x23, 0x28, 0x27, 0xa0, 0x75, 0x6f, 0x43, 0x31, 0xde, 0x9c, 0x5f, 0x04, 0x6a, 0x49,
	0xd1, 0x9a, 0x29, 0x34, 0xfb, 0x16, 0x6a, 0x4e, 0x06, 0x86, 0x52, 0x0f, 0xd2, 0x8d, 0x2f, 0xe2,
	0x32, 0x01, 0xed, 0x22, 0x93, 0x9f, 0xf5, 0xe0, 0xfa, 0x1f, 0x53, 0x53, 0x5c, 0xde, 0x49, 0xde,
	0x89, 0x4a, 0x6a, 0x1b, 0xe3, 0xe6, 0xbf, 0x11, 0x28, 0x25, 0x0c, 0xdb, 0xb0, 0x3d, 0xff, 0xbb,
	0x13, 0x5e, 0x03, 0xbe, 0xfa, 0x3a, 0xaf, 0x76, 0x5a, 0x32, 0x3d, 0x06, 0x1a, 0xdd, 0x80, 0x18,
	0xa5, 0xf1, 0x97, 0x94, 0x29, 0xb9, 0xed, 0xaf, 0x06, 0x54, 0x62, 0xaf, 0x6f, 0x18, 0xc7, 0x9d,
	0x3e, 0x9f, 0xd0, 0x2e, 0x14, 0x9e, 0x4b, 0xa1, 0xb8, 0x50, 0xb4, 0x6a, 0xe9, 0x31, 0x6c, 0x45,
	0x33, 0xda, 0x3a, 0x0c, 0x66, 0x34, 0xfb, 0x3f, 0x2a, 0x89, 0x17, 0xf2, 0xe6, 0xfb, 0x1f, 0x3f,
	0x3f, 0x1b, 0xbb, 0x66, 0x35, 0x9c, 0xd7, 0x8b, 0x8f, 0x81, 0xab, 0x79, 0x3a, 0xa4, 0x49, 0x4f,
	0x21, 0xaf, 0x87, 0x6d, 0x26, 0x29, 0x5d, 0x1d, 0xdb, 0x66, 0x3d, 0x24, 0x66, 0x66, 0x65, 0x89,
	0x58, 0x4f, 0xf0, 0x80, 0xf7, 0x0c, 0x0a, 0x47, 0x62, 0xea, 0x71, 0x37, 0x5b, 0xed, 0xce, 0x42,
	0xed, 0xa2, 0x01, 0x99, 0x9a, 0x87, 0x9a, 0xad, 0x43, 0x9a, 0xcf, 0x36, 0xcf, 0xf0, 0x03, 0xd6,
	0xcb, 0x87, 0x94, 0xf7, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x50, 0x87, 0x96, 0x3f, 0xe9, 0x06,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionPoolReaderClient is the client API for TransactionPoolReader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionPoolReaderClient interface {
	Content(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TxPool, error)
	// Status returns the number of pending and queued transaction in the pool.
	Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StatusInfo, error)
	// inspect retrieves the content of the transaction pool and flattens it into an
	// easily inspectable list.
	Inspect(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TxStringPool, error)
}

type transactionPoolReaderClient struct {
	cc *grpc.ClientConn
}

func NewTransactionPoolReaderClient(cc *grpc.ClientConn) TransactionPoolReaderClient {
	return &transactionPoolReaderClient{cc}
}

func (c *transactionPoolReaderClient) Content(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TxPool, error) {
	out := new(TxPool)
	err := c.cc.Invoke(ctx, "/txpool.TransactionPoolReader/Content", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionPoolReaderClient) Status(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StatusInfo, error) {
	out := new(StatusInfo)
	err := c.cc.Invoke(ctx, "/txpool.TransactionPoolReader/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionPoolReaderClient) Inspect(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TxStringPool, error) {
	out := new(TxStringPool)
	err := c.cc.Invoke(ctx, "/txpool.TransactionPoolReader/Inspect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionPoolReaderServer is the server API for TransactionPoolReader service.
type TransactionPoolReaderServer interface {
	Content(context.Context, *empty.Empty) (*TxPool, error)
	// Status returns the number of pending and queued transaction in the pool.
	Status(context.Context, *empty.Empty) (*StatusInfo, error)
	// inspect retrieves the content of the transaction pool and flattens it into an
	// easily inspectable list.
	Inspect(context.Context, *empty.Empty) (*TxStringPool, error)
}

func RegisterTransactionPoolReaderServer(s *grpc.Server, srv TransactionPoolReaderServer) {
	s.RegisterService(&_TransactionPoolReader_serviceDesc, srv)
}

func _TransactionPoolReader_Content_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionPoolReaderServer).Content(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TransactionPoolReader/Content",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionPoolReaderServer).Content(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionPoolReader_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionPoolReaderServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TransactionPoolReader/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionPoolReaderServer).Status(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionPoolReader_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionPoolReaderServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TransactionPoolReader/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionPoolReaderServer).Inspect(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionPoolReader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "txpool.TransactionPoolReader",
	HandlerType: (*TransactionPoolReaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Content",
			Handler:    _TransactionPoolReader_Content_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _TransactionPoolReader_Status_Handler,
		},
		{
			MethodName: "Inspect",
			Handler:    _TransactionPoolReader_Inspect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/txpool/txpool.proto",
}
