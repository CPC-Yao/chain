{
  "swagger": "2.0",
  "info": {
    "title": "v1/debug/debug.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/debug/dumpBlock": {
      "post": {
        "summary": "DumpBlock retrieves the entire state of the database at a given block.",
        "operationId": "DumpBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonDump"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonBlockNumber"
            }
          }
        ],
        "tags": [
          "DebugDumper"
        ]
      }
    },
    "/api/v1/debug/getBadBlocks": {
      "post": {
        "summary": "GetBadBlocks returns a list of the last 'bad blocks' that the client has seen on the network\nand returns them as a JSON list of block-hashes",
        "operationId": "GetBadBlocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBadBlockArgs"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        ],
        "tags": [
          "DebugManager"
        ]
      }
    },
    "/api/v1/debug/getModifiedAccountsByHash": {
      "post": {
        "summary": "GetModifiedAccountsByHash returns all accounts that have changed between the\ntwo blocks specified. A change is defined as a difference in nonce, balance,\ncode hash, or storage hash.",
        "description": "With one parameter, returns the list of accounts modified in the specified block.",
        "operationId": "GetModifiedAccountsByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonAddresses"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debugDebugManagerRequest"
            }
          }
        ],
        "tags": [
          "DebugManager"
        ]
      }
    },
    "/api/v1/debug/getModifiedAccountsByNumber": {
      "post": {
        "summary": "GetModifiedAccountsByNumber returns all accounts that have changed between the\ntwo blocks specified. A change is defined as a difference in nonce, balance,\ncode hash, or storage hash.",
        "description": "With one parameter, returns the list of accounts modified in the specified block.",
        "operationId": "GetModifiedAccountsByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonAddresses"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debugDebugManagerRequest"
            }
          }
        ],
        "tags": [
          "DebugManager"
        ]
      }
    },
    "/api/v1/debug/preimage": {
      "post": {
        "summary": "DumpBlock retrieves the entire state of the database at a given block.",
        "operationId": "Preimage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/debugPreimageValue"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonHash"
            }
          }
        ],
        "tags": [
          "DebugManager"
        ]
      }
    },
    "/api/v1/debug/storageRangeAt": {
      "post": {
        "summary": "StorageRangeAt returns the storage at the giyyven block height and transaction index.",
        "operationId": "StorageRangeAt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/debugStorageRangeResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/debugDebugManagerRequest"
            }
          }
        ],
        "tags": [
          "DebugManager"
        ]
      }
    }
  },
  "definitions": {
    "commonAddresses": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "commonBadBlockArg": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "rlp": {
          "type": "string"
        },
        "block": {
          "$ref": "#/definitions/commonBlock"
        }
      }
    },
    "commonBadBlockArgs": {
      "type": "object",
      "properties": {
        "bad_block_args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonBadBlockArg"
          }
        }
      }
    },
    "commonBlock": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "uint64"
        },
        "hash": {
          "type": "string"
        },
        "parent_hash": {
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "mix_hash": {
          "type": "string"
        },
        "logs_bloom": {
          "type": "string",
          "format": "byte"
        },
        "state_root": {
          "type": "string"
        },
        "miner": {
          "type": "string"
        },
        "difficulty": {
          "type": "string",
          "format": "uint64"
        },
        "extra_data": {
          "type": "string",
          "format": "byte"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "gas_limit": {
          "type": "string",
          "format": "uint64"
        },
        "gas_used": {
          "type": "string",
          "format": "uint64"
        },
        "timestamp": {
          "type": "string"
        },
        "transactions_root": {
          "type": "string"
        },
        "receipts_root": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonTransaction"
          }
        }
      }
    },
    "commonBlockNumber": {
      "type": "object",
      "properties": {
        "block_number": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "commonDump": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string"
        },
        "accounts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/commonDumpAccount"
          }
        }
      }
    },
    "commonDumpAccount": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "root": {
          "type": "string"
        },
        "code_hash": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "storage": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "commonHash": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        }
      }
    },
    "commonTransaction": {
      "type": "object",
      "properties": {
        "tx_hash": {
          "type": "string"
        },
        "block_hash": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "v": {
          "type": "string"
        },
        "r": {
          "type": "string"
        },
        "s": {
          "type": "string"
        },
        "transaction_index": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "gas": {
          "type": "string",
          "format": "uint64"
        },
        "gas_price": {
          "type": "string",
          "format": "uint64"
        },
        "input": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "debugDebugManagerRequest": {
      "type": "object",
      "properties": {
        "block_hash": {
          "type": "string"
        },
        "tx_index": {
          "type": "integer",
          "format": "int32"
        },
        "contract_address": {
          "type": "string"
        },
        "key_start": {
          "type": "string",
          "format": "byte"
        },
        "max_result": {
          "type": "integer",
          "format": "int32"
        },
        "start_number": {
          "type": "string",
          "format": "uint64"
        },
        "end_number": {
          "type": "string",
          "format": "uint64"
        },
        "start_hash": {
          "type": "string"
        },
        "end_hash": {
          "type": "string"
        }
      },
      "title": "DebugManagerRequest DebugManager request arguments"
    },
    "debugPreimageValue": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "PreimageValue the preimage for a sha3 hash"
    },
    "debugStorageEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "debugStorageRangeResult": {
      "type": "object",
      "properties": {
        "storage_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/debugStorageEntry"
          }
        },
        "next_key": {
          "type": "string"
        }
      },
      "description": "StorageRangeResult is the result of a debug_storageRangeAt API call."
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
