// Code generated by protoc-gen-go. DO NOT EDIT.
// source: debug.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PreimageValue struct {
	Preimage             []byte   `protobuf:"bytes,1,opt,name=preimage,proto3" json:"preimage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreimageValue) Reset()         { *m = PreimageValue{} }
func (m *PreimageValue) String() string { return proto.CompactTextString(m) }
func (*PreimageValue) ProtoMessage()    {}
func (*PreimageValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{0}
}

func (m *PreimageValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreimageValue.Unmarshal(m, b)
}
func (m *PreimageValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreimageValue.Marshal(b, m, deterministic)
}
func (m *PreimageValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreimageValue.Merge(m, src)
}
func (m *PreimageValue) XXX_Size() int {
	return xxx_messageInfo_PreimageValue.Size(m)
}
func (m *PreimageValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PreimageValue.DiscardUnknown(m)
}

var xxx_messageInfo_PreimageValue proto.InternalMessageInfo

func (m *PreimageValue) GetPreimage() []byte {
	if m != nil {
		return m.Preimage
	}
	return nil
}

type DebugManagerRequest struct {
	BlockHash            string   `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	TxIndex              int32    `protobuf:"varint,2,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	ContractAddress      string   `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	KeyStart             string   `protobuf:"bytes,4,opt,name=key_start,json=keyStart,proto3" json:"key_start,omitempty"`
	MaxResult            int32    `protobuf:"varint,5,opt,name=max_result,json=maxResult,proto3" json:"max_result,omitempty"`
	StartNumber          uint64   `protobuf:"varint,6,opt,name=start_number,json=startNumber,proto3" json:"start_number,omitempty"`
	EndNumber            uint64   `protobuf:"varint,7,opt,name=end_number,json=endNumber,proto3" json:"end_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugManagerRequest) Reset()         { *m = DebugManagerRequest{} }
func (m *DebugManagerRequest) String() string { return proto.CompactTextString(m) }
func (*DebugManagerRequest) ProtoMessage()    {}
func (*DebugManagerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{1}
}

func (m *DebugManagerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugManagerRequest.Unmarshal(m, b)
}
func (m *DebugManagerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugManagerRequest.Marshal(b, m, deterministic)
}
func (m *DebugManagerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugManagerRequest.Merge(m, src)
}
func (m *DebugManagerRequest) XXX_Size() int {
	return xxx_messageInfo_DebugManagerRequest.Size(m)
}
func (m *DebugManagerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugManagerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DebugManagerRequest proto.InternalMessageInfo

func (m *DebugManagerRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *DebugManagerRequest) GetTxIndex() int32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *DebugManagerRequest) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *DebugManagerRequest) GetKeyStart() string {
	if m != nil {
		return m.KeyStart
	}
	return ""
}

func (m *DebugManagerRequest) GetMaxResult() int32 {
	if m != nil {
		return m.MaxResult
	}
	return 0
}

func (m *DebugManagerRequest) GetStartNumber() uint64 {
	if m != nil {
		return m.StartNumber
	}
	return 0
}

func (m *DebugManagerRequest) GetEndNumber() uint64 {
	if m != nil {
		return m.EndNumber
	}
	return 0
}

type StorageEntry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageEntry) Reset()         { *m = StorageEntry{} }
func (m *StorageEntry) String() string { return proto.CompactTextString(m) }
func (*StorageEntry) ProtoMessage()    {}
func (*StorageEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{2}
}

func (m *StorageEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageEntry.Unmarshal(m, b)
}
func (m *StorageEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageEntry.Marshal(b, m, deterministic)
}
func (m *StorageEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageEntry.Merge(m, src)
}
func (m *StorageEntry) XXX_Size() int {
	return xxx_messageInfo_StorageEntry.Size(m)
}
func (m *StorageEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageEntry.DiscardUnknown(m)
}

var xxx_messageInfo_StorageEntry proto.InternalMessageInfo

func (m *StorageEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StorageEntry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StorageMap struct {
	StorageMap           map[string]*StorageEntry `protobuf:"bytes,1,rep,name=storage_map,json=storageMap,proto3" json:"storage_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StorageMap) Reset()         { *m = StorageMap{} }
func (m *StorageMap) String() string { return proto.CompactTextString(m) }
func (*StorageMap) ProtoMessage()    {}
func (*StorageMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{3}
}

func (m *StorageMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageMap.Unmarshal(m, b)
}
func (m *StorageMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageMap.Marshal(b, m, deterministic)
}
func (m *StorageMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageMap.Merge(m, src)
}
func (m *StorageMap) XXX_Size() int {
	return xxx_messageInfo_StorageMap.Size(m)
}
func (m *StorageMap) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageMap.DiscardUnknown(m)
}

var xxx_messageInfo_StorageMap proto.InternalMessageInfo

func (m *StorageMap) GetStorageMap() map[string]*StorageEntry {
	if m != nil {
		return m.StorageMap
	}
	return nil
}

type StorageRangeResult struct {
	StorageMap           *StorageMap `protobuf:"bytes,1,opt,name=storage_map,json=storageMap,proto3" json:"storage_map,omitempty"`
	NextKey              string      `protobuf:"bytes,2,opt,name=next_key,json=nextKey,proto3" json:"next_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StorageRangeResult) Reset()         { *m = StorageRangeResult{} }
func (m *StorageRangeResult) String() string { return proto.CompactTextString(m) }
func (*StorageRangeResult) ProtoMessage()    {}
func (*StorageRangeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{4}
}

func (m *StorageRangeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageRangeResult.Unmarshal(m, b)
}
func (m *StorageRangeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageRangeResult.Marshal(b, m, deterministic)
}
func (m *StorageRangeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageRangeResult.Merge(m, src)
}
func (m *StorageRangeResult) XXX_Size() int {
	return xxx_messageInfo_StorageRangeResult.Size(m)
}
func (m *StorageRangeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageRangeResult.DiscardUnknown(m)
}

var xxx_messageInfo_StorageRangeResult proto.InternalMessageInfo

func (m *StorageRangeResult) GetStorageMap() *StorageMap {
	if m != nil {
		return m.StorageMap
	}
	return nil
}

func (m *StorageRangeResult) GetNextKey() string {
	if m != nil {
		return m.NextKey
	}
	return ""
}

func init() {
	proto.RegisterType((*PreimageValue)(nil), "protos.PreimageValue")
	proto.RegisterType((*DebugManagerRequest)(nil), "protos.DebugManagerRequest")
	proto.RegisterType((*StorageEntry)(nil), "protos.StorageEntry")
	proto.RegisterType((*StorageMap)(nil), "protos.StorageMap")
	proto.RegisterMapType((map[string]*StorageEntry)(nil), "protos.StorageMap.StorageMapEntry")
	proto.RegisterType((*StorageRangeResult)(nil), "protos.StorageRangeResult")
}

func init() { proto.RegisterFile("debug.proto", fileDescriptor_8d9d361be58531fb) }

var fileDescriptor_8d9d361be58531fb = []byte{
	// 665 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0x56, 0xd6, 0xfd, 0x69, 0xdc, 0xfc, 0x7e, 0x1b, 0xde, 0x18, 0x21, 0x1d, 0xa2, 0xb3, 0x84,
	0x28, 0x03, 0xa5, 0xa2, 0x93, 0x10, 0xda, 0x5d, 0xcb, 0xa6, 0x81, 0xd0, 0x10, 0xca, 0x24, 0x90,
	0xb8, 0x89, 0x9c, 0xc4, 0x4b, 0xa3, 0x36, 0x76, 0x88, 0x9d, 0xa9, 0xb9, 0x42, 0xe2, 0x15, 0x78,
	0x07, 0x9e, 0x82, 0xb7, 0xe0, 0x15, 0x78, 0x08, 0x2e, 0x91, 0xed, 0xa4, 0xa4, 0x1d, 0xdc, 0x71,
	0x93, 0xf8, 0x7c, 0xe7, 0xf8, 0x7c, 0x5f, 0xce, 0x9f, 0x80, 0x4e, 0x44, 0x82, 0x22, 0x76, 0xb3,
	0x9c, 0x09, 0x06, 0x37, 0xd5, 0x8b, 0x3b, 0x56, 0xc8, 0xd2, 0x94, 0x51, 0x8d, 0x3a, 0xdd, 0x98,
	0xb1, 0x78, 0x46, 0x06, 0xca, 0x0a, 0x8a, 0xab, 0x01, 0x49, 0x33, 0x51, 0x56, 0xce, 0x83, 0xca,
	0x89, 0xb3, 0x64, 0x80, 0x29, 0x65, 0x02, 0x8b, 0x84, 0x51, 0xae, 0xbd, 0xe8, 0x31, 0xf8, 0xef,
	0x6d, 0x4e, 0x92, 0x14, 0xc7, 0xe4, 0x1d, 0x9e, 0x15, 0x04, 0x3a, 0xa0, 0x9d, 0x55, 0x80, 0x6d,
	0xf4, 0x8c, 0xbe, 0xe5, 0x2d, 0x6c, 0xf4, 0xd3, 0x00, 0xbb, 0xa7, 0x52, 0xcd, 0x05, 0xa6, 0x38,
	0x26, 0xb9, 0x47, 0x3e, 0x16, 0x84, 0x0b, 0x78, 0x0f, 0x80, 0x60, 0xc6, 0xc2, 0xa9, 0x3f, 0xc1,
	0x7c, 0xa2, 0x6e, 0x99, 0x9e, 0xa9, 0x90, 0x97, 0x98, 0x4f, 0xe0, 0x5d, 0xd0, 0x16, 0x73, 0x3f,
	0xa1, 0x11, 0x99, 0xdb, 0x6b, 0x3d, 0xa3, 0xbf, 0xe1, 0x6d, 0x89, 0xf9, 0x2b, 0x69, 0xc2, 0x47,
	0x60, 0x27, 0x64, 0x54, 0xe4, 0x38, 0x14, 0x3e, 0x8e, 0xa2, 0x9c, 0x70, 0x6e, 0xb7, 0xd4, 0xfd,
	0xed, 0x1a, 0x1f, 0x69, 0x18, 0x76, 0x81, 0x39, 0x25, 0xa5, 0xcf, 0x05, 0xce, 0x85, 0xbd, 0xae,
	0x62, 0xda, 0x53, 0x52, 0x5e, 0x4a, 0x5b, 0x2a, 0x48, 0xf1, 0xdc, 0xcf, 0x09, 0x2f, 0x66, 0xc2,
	0xde, 0x50, 0x24, 0x66, 0x8a, 0xe7, 0x9e, 0x02, 0xe0, 0x21, 0xb0, 0xd4, 0x3d, 0x9f, 0x16, 0x69,
	0x40, 0x72, 0x7b, 0xb3, 0x67, 0xf4, 0xd7, 0xbd, 0x8e, 0xc2, 0xde, 0x28, 0x48, 0x66, 0x20, 0x34,
	0xaa, 0x03, 0xb6, 0x54, 0x80, 0x49, 0x68, 0xa4, 0xdd, 0xe8, 0x19, 0xb0, 0x2e, 0x05, 0xcb, 0x71,
	0x4c, 0xce, 0xa8, 0xc8, 0x4b, 0xb8, 0x03, 0x5a, 0x53, 0x52, 0x56, 0xdf, 0x2a, 0x8f, 0x70, 0x0f,
	0x6c, 0x5c, 0xcb, 0x0a, 0xaa, 0x4f, 0x34, 0x3d, 0x6d, 0xa0, 0xaf, 0x06, 0x00, 0xd5, 0xc5, 0x0b,
	0x9c, 0xc1, 0x17, 0xa0, 0xc3, 0xb5, 0xe5, 0xa7, 0x38, 0xb3, 0x8d, 0x5e, 0xab, 0xdf, 0x19, 0x22,
	0xdd, 0x0b, 0xee, 0xfe, 0x0e, 0x6c, 0x1c, 0x15, 0x9f, 0x07, 0xf8, 0x02, 0x70, 0x2e, 0xc1, 0xf6,
	0x8a, 0xfb, 0x0f, 0x72, 0x8e, 0x9a, 0x72, 0x3a, 0xc3, 0xbd, 0x15, 0x0e, 0x9d, 0x55, 0x87, 0x9c,
	0xac, 0x3d, 0x37, 0x50, 0x04, 0x60, 0xe5, 0xf2, 0x30, 0x8d, 0x49, 0x55, 0xb8, 0xe3, 0x55, 0xbd,
	0x32, 0x17, 0xbc, 0xa9, 0xb7, 0xa9, 0x4f, 0xf6, 0x9b, 0x92, 0xb9, 0xf0, 0xa5, 0x22, 0x5d, 0x8c,
	0x2d, 0x69, 0xbf, 0x26, 0xe5, 0x10, 0x83, 0x8e, 0x1a, 0xa0, 0xd3, 0x22, 0xcd, 0x48, 0x0e, 0x3d,
	0x60, 0xca, 0xd3, 0x58, 0x8e, 0x0a, 0xdc, 0xad, 0xd3, 0x2a, 0x53, 0xd7, 0xdd, 0xb1, 0x6a, 0x50,
	0xc6, 0x21, 0xf4, 0xf9, 0xfb, 0x8f, 0x2f, 0x6b, 0x07, 0xe8, 0x8e, 0x9a, 0xe6, 0xeb, 0xa7, 0x03,
	0xb5, 0x1b, 0x83, 0xa8, 0xce, 0x71, 0x62, 0x1c, 0x0d, 0xbf, 0xb5, 0x80, 0xd5, 0x1c, 0x52, 0xf8,
	0x1e, 0xb4, 0xeb, 0x11, 0x87, 0xb7, 0x96, 0x38, 0xe4, 0x74, 0x3a, 0xb7, 0x6b, 0x68, 0x69, 0x0f,
	0xd0, 0xa1, 0xa2, 0xea, 0xa2, 0xfd, 0x65, 0xaa, 0x7a, 0x17, 0x4e, 0x8c, 0x23, 0x18, 0x02, 0xeb,
	0x9c, 0x88, 0x31, 0x8e, 0x54, 0x32, 0x0e, 0xf7, 0x5d, 0xbd, 0x6a, 0x6e, 0xbd, 0x87, 0xee, 0x99,
	0xdc, 0x43, 0x67, 0x51, 0xfb, 0x3a, 0x74, 0x94, 0xc7, 0x1c, 0x3d, 0x50, 0x04, 0xf7, 0x91, 0xb3,
	0x4c, 0x10, 0x37, 0x32, 0x4a, 0x92, 0x14, 0xfc, 0xdf, 0xec, 0xcb, 0x48, 0xfc, 0x95, 0xc6, 0x59,
	0x69, 0x4b, 0xa3, 0x8f, 0xe8, 0xa1, 0x22, 0x3b, 0x44, 0x07, 0xcb, 0x64, 0x7c, 0x29, 0xb3, 0xa4,
	0xfb, 0x04, 0xba, 0xe7, 0x44, 0x5c, 0xb0, 0x28, 0xb9, 0x4a, 0x48, 0x34, 0x0a, 0x43, 0x56, 0x50,
	0xc1, 0xc7, 0x65, 0xb5, 0x25, 0xdd, 0x45, 0x3b, 0x6e, 0xfe, 0x06, 0xfe, 0x89, 0x80, 0xf1, 0x13,
	0x80, 0x58, 0x1e, 0xbb, 0x41, 0x22, 0x82, 0x22, 0x9c, 0x12, 0xe1, 0x86, 0x59, 0x38, 0xc1, 0x09,
	0x75, 0xf5, 0x53, 0x33, 0x7c, 0xa8, 0xfe, 0x83, 0x81, 0x7e, 0x1f, 0xff, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xf0, 0xf9, 0xf5, 0x2d, 0x25, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DebugDumperClient is the client API for DebugDumper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugDumperClient interface {
	DumpBlock(ctx context.Context, in *BlockNumber, opts ...grpc.CallOption) (*Dump, error)
}

type debugDumperClient struct {
	cc *grpc.ClientConn
}

func NewDebugDumperClient(cc *grpc.ClientConn) DebugDumperClient {
	return &debugDumperClient{cc}
}

func (c *debugDumperClient) DumpBlock(ctx context.Context, in *BlockNumber, opts ...grpc.CallOption) (*Dump, error) {
	out := new(Dump)
	err := c.cc.Invoke(ctx, "/protos.DebugDumper/DumpBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugDumperServer is the server API for DebugDumper service.
type DebugDumperServer interface {
	DumpBlock(context.Context, *BlockNumber) (*Dump, error)
}

func RegisterDebugDumperServer(s *grpc.Server, srv DebugDumperServer) {
	s.RegisterService(&_DebugDumper_serviceDesc, srv)
}

func _DebugDumper_DumpBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugDumperServer).DumpBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DebugDumper/DumpBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugDumperServer).DumpBlock(ctx, req.(*BlockNumber))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugDumper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.DebugDumper",
	HandlerType: (*DebugDumperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DumpBlock",
			Handler:    _DebugDumper_DumpBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "debug.proto",
}

// DebugManagerClient is the client API for DebugManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugManagerClient interface {
	Preimage(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*PreimageValue, error)
	GetBadBlocks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BadBlockArgs, error)
	StorageRangeAt(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StorageRangeResult, error)
	GetModifiedAccountsByNumber(ctx context.Context, in *DebugManagerRequest, opts ...grpc.CallOption) (*StorageRangeResult, error)
}

type debugManagerClient struct {
	cc *grpc.ClientConn
}

func NewDebugManagerClient(cc *grpc.ClientConn) DebugManagerClient {
	return &debugManagerClient{cc}
}

func (c *debugManagerClient) Preimage(ctx context.Context, in *BlockHash, opts ...grpc.CallOption) (*PreimageValue, error) {
	out := new(PreimageValue)
	err := c.cc.Invoke(ctx, "/protos.DebugManager/Preimage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugManagerClient) GetBadBlocks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BadBlockArgs, error) {
	out := new(BadBlockArgs)
	err := c.cc.Invoke(ctx, "/protos.DebugManager/GetBadBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugManagerClient) StorageRangeAt(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StorageRangeResult, error) {
	out := new(StorageRangeResult)
	err := c.cc.Invoke(ctx, "/protos.DebugManager/StorageRangeAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugManagerClient) GetModifiedAccountsByNumber(ctx context.Context, in *DebugManagerRequest, opts ...grpc.CallOption) (*StorageRangeResult, error) {
	out := new(StorageRangeResult)
	err := c.cc.Invoke(ctx, "/protos.DebugManager/GetModifiedAccountsByNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugManagerServer is the server API for DebugManager service.
type DebugManagerServer interface {
	Preimage(context.Context, *BlockHash) (*PreimageValue, error)
	GetBadBlocks(context.Context, *empty.Empty) (*BadBlockArgs, error)
	StorageRangeAt(context.Context, *empty.Empty) (*StorageRangeResult, error)
	GetModifiedAccountsByNumber(context.Context, *DebugManagerRequest) (*StorageRangeResult, error)
}

func RegisterDebugManagerServer(s *grpc.Server, srv DebugManagerServer) {
	s.RegisterService(&_DebugManager_serviceDesc, srv)
}

func _DebugManager_Preimage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugManagerServer).Preimage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DebugManager/Preimage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugManagerServer).Preimage(ctx, req.(*BlockHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebugManager_GetBadBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugManagerServer).GetBadBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DebugManager/GetBadBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugManagerServer).GetBadBlocks(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebugManager_StorageRangeAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugManagerServer).StorageRangeAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DebugManager/StorageRangeAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugManagerServer).StorageRangeAt(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebugManager_GetModifiedAccountsByNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugManagerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugManagerServer).GetModifiedAccountsByNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DebugManager/GetModifiedAccountsByNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugManagerServer).GetModifiedAccountsByNumber(ctx, req.(*DebugManagerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.DebugManager",
	HandlerType: (*DebugManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Preimage",
			Handler:    _DebugManager_Preimage_Handler,
		},
		{
			MethodName: "GetBadBlocks",
			Handler:    _DebugManager_GetBadBlocks_Handler,
		},
		{
			MethodName: "StorageRangeAt",
			Handler:    _DebugManager_StorageRangeAt_Handler,
		},
		{
			MethodName: "GetModifiedAccountsByNumber",
			Handler:    _DebugManager_GetModifiedAccountsByNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "debug.proto",
}
